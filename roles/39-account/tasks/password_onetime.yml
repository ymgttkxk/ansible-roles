---
# this playbook must run at ONLY control group
# shadow.name: user name
# shadow.file: write generated onetime password
- name: debug shadow
  debug: var=shadow

- name: debug control_ipv4
  debug: var=control_ipv4

- name: gen clear text password
  register: pwmake_passwd
  command: pwmake 1
#  delegate_to: localhost
  failed_when: no
  changed_when: false

- name: gen hashed password
  set_fact:
    hashed_passwd: "{{ pwmake_passwd.stdout | password_hash('sha512', 65534 | random(seed=inventory_hostname) | string) }}"
  delegate_to: localhost
  changed_when: false

- name: get expire day
  register: now_sec
  command: "date +%s"
  delegate_to: localhost
  changed_when: false

#- name: debug onetime password
#  vars:
#    expire_days: 5
#    expire_sec: "{{ now_sec.stdout | int + 60 * 60 * 24 * expire_days | int }}"
#  debug:
#    msg: "name {{ shadow.name }}, pass {{ hashed_passwd }}, date {{ now_sec.stdout }}, expire {{ expire_sec }}"

- name: change password by onetime password
  vars:
    expire_days: 5
    expire_sec: "{{ now_sec.stdout | int + 60 * 60 * 24 * expire_days | int }}"
  user:
    name: "{{ shadow.name }}"
    password: "{{ hashed_passwd }}"
    expires: "{{ expire_sec }}"
  become: true

- name: force set password at login by onetime password
  command: "passwd -e {{ shadow.name }}"
  become: true
  failed_when: no
  changed_when: false


- name: write clear text onetime password in file
  lineinfile:
    path: "{{ shadow.file }}"
    regexp: '^.+'
    line: "{{ pwmake_passwd.stdout }},{{ hashed_passwd }}"
    create: yes
    mode: 0440
  delegate_to: "{{ control_ipv4 }}"
  become: true

- name: info password
  debug:
    msg: "INFO: ID:{{ shadow.name }},PW:{{ pwmake_passwd.stdout }}"

